# Generated by Django 3.1.13 on 2021-07-31 18:15

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        ('preferences', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramBotPreferences',
            fields=[
                ('preferences_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='preferences.preferences')),
                ('Message for /start command', models.TextField(default="Hello! I'm a bot which is created for the purpose of @BotValley test task.\nHowever, I have one useful feature - I can show you the exchange rate (to USD) of the cryptocurrencies below.‚¨áÔ∏è ‚¨áÔ∏è ‚¨áÔ∏è\n \nPress one of these buttons and I'll do the rest! üíπ")),
                ("Reply message if it's impossible to get crypto exchange rates", models.TextField(default="Sorry, but it's impossible to get crypto exchange rates right now. üòµ \nPlease, contact administrator @alena_kono for help. ü§ì")),
                ('Reply message if user sent any other content', models.TextField(default='I can only send you current exchange rates for the currencies shown on a keyboard below.\nTry and push the button! üíπ ‚¨áÔ∏è')),
                ('Buttons (equal to cryptocurrencies). Format: BTC,ETH', models.CharField(default='BTC,ETH,DOGE', max_length=255)),
                ('Reply message if something went wrong with the bot', models.TextField(default='Sorry, something wrong has happened and bot has broken. üòµ \nPlease, contact administrator @alena_kono, she will fix anything! :)')),
            ],
            options={
                'verbose_name': 'Telegram bot preference',
                'verbose_name_plural': 'Telegram bot preferences',
            },
            bases=('preferences.preferences',),
            managers=[
                ('singleton', django.db.models.manager.Manager()),
            ],
        ),
    ]
